Wireframe/Pseudocode

- Use grid to create ?x? board. TBD: board size
- Randomly assign 'mines' on board. TBD: number of mines
- User will be able to click grids. A clicked grid will have 2 (or 3) states, safe or unsafe.  If the square is unsafe, that means the user has clicked a mine.  The game will end.
	- Squares will recursively check the surrounding area to determine its number value, which will indicate the number of mines in a 1-grid radius.
- Responsive design.

Additional features: Running time, score and calculating score, enabling left click to mark a square as 'safe', safe-click chaining (the board will automatically mark surrouding grids as safe to an undetermined value)

1. Define required constants.
	1.1. Colors object to hold following keys:
	null - unclicked square
	1 - clicked safe square, no surrounding mines
	2 - clicked safe square, 1 surrounding mine
	3 - clicked safe square, 2 surrounding mines
	.. as many as needed
	4 - clicked unsafe square
	5 - flagged unsafe square

2. Define state variables.
	2.1 Winner
	2.2 Board array (1d or 2d?)

3. Element caching (storing elements that will be access more than once)
	3.1 Store x elements that represent squares on the page

4. Upon loading, the app should...
	4.1 Initialize state variables.
		4.1.1. Initialize board array to represent unclicked squares.
		4.1.2. Initialize random unsafe squares.
	4.2 Render state variables.
		4.2.1. Render the board.
			4.2.1.1. Loop over every element in the board.
				4.2.1.1.1. Set background color/image of current element.
		4.2.2. Render a message.
			4.2.2.1. If winner has won, inform user.
			4.2.2.2. If winner has lost, inform user.
	4.3 Wait for user to click a square.

5. Hande player clicking square.
	5.1 Obtain index of square by extracting index from id assigned to element.
	5.2. If board has value at index; return (square already clicked)
	5.3. If winner === W, return. (game over)
	5.4. If board has unsafe value at index, end game.
	5.5. Set winner variable if they have won.
		5.5.1. Loop through board.
		5.5.2. If there are only safe values on the board, AND there are no more squares that can be clicked, set winner variable.
	5.6. Check surrounding squares for unsafe squares
		5.6.1. 
	5.x Render state to page.

6. Handle player clicking replay button.
	6.1 Initialize state variables and render board.
